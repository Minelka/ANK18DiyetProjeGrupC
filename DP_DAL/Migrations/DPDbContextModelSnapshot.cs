// <auto-generated />
using System;
using DP_DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DP_DAL.Migrations
{
    [DbContext(typeof(DPDbContext))]
    partial class DPDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DP_DAL.Entities.Concrete.Beverages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Calorie")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PortionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PortionId");

                    b.ToTable("Beverages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Calorie = 400,
                            Created = new DateTime(2024, 10, 11, 11, 43, 11, 412, DateTimeKind.Local).AddTicks(5286),
                            IsActive = false,
                            Name = "Portakal suyu",
                            PortionId = 2
                        },
                        new
                        {
                            Id = 2,
                            Calorie = 250,
                            Created = new DateTime(2024, 10, 11, 9, 43, 11, 412, DateTimeKind.Local).AddTicks(5286),
                            IsActive = false,
                            Name = "Çikolu Süt",
                            PortionId = 2
                        },
                        new
                        {
                            Id = 3,
                            Calorie = 100,
                            Created = new DateTime(2024, 10, 11, 11, 43, 41, 412, DateTimeKind.Local).AddTicks(5286),
                            IsActive = false,
                            Name = "Ayran",
                            PortionId = 2
                        });
                });

            modelBuilder.Entity("DP_DAL.Entities.Concrete.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Calorie")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PortionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PortionId");

                    b.ToTable("Foods", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Calorie = 250,
                            Created = new DateTime(2024, 10, 11, 11, 43, 11, 412, DateTimeKind.Local).AddTicks(5286),
                            IsActive = false,
                            Name = "Yağlama",
                            PortionId = 1
                        },
                        new
                        {
                            Id = 2,
                            Calorie = 780,
                            Created = new DateTime(2024, 10, 11, 11, 27, 11, 412, DateTimeKind.Local).AddTicks(5286),
                            IsActive = false,
                            Name = "Mantı",
                            PortionId = 3
                        },
                        new
                        {
                            Id = 3,
                            Calorie = 1100,
                            Created = new DateTime(2024, 9, 11, 11, 27, 11, 412, DateTimeKind.Local).AddTicks(5286),
                            IsActive = false,
                            Name = "Patlıcan Balıkı",
                            PortionId = 3
                        });
                });

            modelBuilder.Entity("DP_DAL.Entities.Concrete.FoodMealUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BeverageValue")
                        .HasColumnType("int");

                    b.Property<int?>("BeveragesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FoodId")
                        .HasColumnType("int");

                    b.Property<int?>("FoodValue")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BeveragesId");

                    b.HasIndex("FoodId");

                    b.HasIndex("MealId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserInfoId");

                    b.ToTable("FoodMealUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BeverageValue = 2,
                            BeveragesId = 1,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateOnly(2024, 10, 13),
                            FoodId = 1,
                            FoodValue = 1,
                            IsActive = false,
                            MealId = 1,
                            UserId = 68
                        },
                        new
                        {
                            Id = 2,
                            BeverageValue = 2,
                            BeveragesId = 3,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateOnly(2024, 10, 12),
                            FoodId = 2,
                            FoodValue = 1,
                            IsActive = false,
                            MealId = 1,
                            UserId = 68
                        },
                        new
                        {
                            Id = 3,
                            BeverageValue = 2,
                            BeveragesId = 1,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateOnly(2024, 10, 11),
                            FoodId = 3,
                            FoodValue = 1,
                            IsActive = false,
                            MealId = 2,
                            UserId = 68
                        },
                        new
                        {
                            Id = 4,
                            BeverageValue = 2,
                            BeveragesId = 2,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateOnly(2024, 10, 10),
                            FoodId = 2,
                            FoodValue = 1,
                            IsActive = false,
                            MealId = 3,
                            UserId = 68
                        },
                        new
                        {
                            Id = 5,
                            BeverageValue = 2,
                            BeveragesId = 2,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateOnly(2024, 10, 9),
                            FoodId = 2,
                            FoodValue = 1,
                            IsActive = false,
                            MealId = 3,
                            UserId = 68
                        },
                        new
                        {
                            Id = 6,
                            BeverageValue = 2,
                            BeveragesId = 1,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateOnly(2024, 10, 6),
                            FoodId = 1,
                            FoodValue = 1,
                            IsActive = false,
                            MealId = 2,
                            UserId = 68
                        },
                        new
                        {
                            Id = 7,
                            BeverageValue = 2,
                            BeveragesId = 3,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateOnly(2024, 10, 5),
                            FoodId = 2,
                            FoodValue = 1,
                            IsActive = false,
                            MealId = 1,
                            UserId = 68
                        },
                        new
                        {
                            Id = 8,
                            BeverageValue = 2,
                            BeveragesId = 2,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateOnly(2024, 9, 30),
                            FoodId = 3,
                            FoodValue = 1,
                            IsActive = false,
                            MealId = 2,
                            UserId = 68
                        },
                        new
                        {
                            Id = 9,
                            BeverageValue = 2,
                            BeveragesId = 1,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateOnly(2024, 9, 1),
                            FoodId = 3,
                            FoodValue = 1,
                            IsActive = false,
                            MealId = 3,
                            UserId = 68
                        });
                });

            modelBuilder.Entity("DP_DAL.Entities.Concrete.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Meals", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 10, 13, 11, 43, 11, 412, DateTimeKind.Local).AddTicks(5286),
                            IsActive = false,
                            Name = "Kahvaltı"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2024, 10, 12, 11, 43, 11, 412, DateTimeKind.Local).AddTicks(5286),
                            IsActive = false,
                            Name = "Öğlen Yemeği"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2024, 10, 11, 11, 43, 11, 412, DateTimeKind.Local).AddTicks(5286),
                            IsActive = false,
                            Name = "Akşam Yemeği"
                        });
                });

            modelBuilder.Entity("DP_DAL.Entities.Concrete.Portion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Portions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 10, 11, 11, 43, 11, 412, DateTimeKind.Local).AddTicks(5286),
                            IsActive = false,
                            Name = "Gram",
                            Value = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2024, 10, 11, 11, 43, 11, 412, DateTimeKind.Local).AddTicks(5286),
                            IsActive = false,
                            Name = "Bardak",
                            Value = 1
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2024, 10, 2, 11, 43, 11, 412, DateTimeKind.Local).AddTicks(5286),
                            IsActive = false,
                            Name = "Tabak",
                            Value = 1
                        });
                });

            modelBuilder.Entity("DP_DAL.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 67,
                            Created = new DateTime(2024, 10, 11, 11, 43, 11, 412, DateTimeKind.Local).AddTicks(5286),
                            Email = "admin@gmail.com",
                            IsActive = false,
                            Name = "Admin",
                            Password = "123456*Admin",
                            Surname = "SURNAME",
                            UserType = 1
                        },
                        new
                        {
                            Id = 68,
                            Created = new DateTime(2024, 10, 11, 11, 43, 11, 412, DateTimeKind.Local).AddTicks(5286),
                            Email = "admin@gmail.com",
                            IsActive = false,
                            Name = "user",
                            Password = "123456*Admin",
                            Surname = "SURNAME",
                            UserType = 2
                        });
                });

            modelBuilder.Entity("DP_DAL.Entities.Concrete.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserInfo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateOnly(1990, 1, 1),
                            Created = new DateTime(2024, 10, 11, 11, 43, 11, 412, DateTimeKind.Local).AddTicks(5286),
                            Gender = 0,
                            Height = 180,
                            IsActive = false,
                            UserId = 68,
                            Weight = 75
                        });
                });

            modelBuilder.Entity("DP_DAL.Entities.Concrete.VWBeverages", b =>
                {
                    b.Property<int>("BeveragesCalorie")
                        .HasColumnType("int");

                    b.Property<string>("BeveragesMealName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeveragesName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PortionValue")
                        .HasColumnType("int");

                    b.Property<int>("UserBeveragesCalorie")
                        .HasColumnType("int");

                    b.Property<DateOnly>("UserBeveragesDate")
                        .HasColumnType("date");

                    b.Property<int>("UserBeveragesPortionTotalValue")
                        .HasColumnType("int");

                    b.Property<int>("UserBeveragesValue")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vwUserBeveragesDailyTotalCalorie", (string)null);
                });

            modelBuilder.Entity("DP_DAL.Entities.Concrete.VWFood", b =>
                {
                    b.Property<int>("FoodCalorie")
                        .HasColumnType("int");

                    b.Property<string>("FoodMealName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PortionValue")
                        .HasColumnType("int");

                    b.Property<int>("UserFoodCalorie")
                        .HasColumnType("int");

                    b.Property<DateOnly>("UserFoodDate")
                        .HasColumnType("date");

                    b.Property<int>("UserFoodPortionTotalValue")
                        .HasColumnType("int");

                    b.Property<int>("UserFoodValue")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vwUserFoodDailyTotalCalorie", (string)null);
                });

            modelBuilder.Entity("DP_DAL.Entities.Concrete.Beverages", b =>
                {
                    b.HasOne("DP_DAL.Entities.Concrete.Portion", "Portion")
                        .WithMany("Beverages")
                        .HasForeignKey("PortionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Portion");
                });

            modelBuilder.Entity("DP_DAL.Entities.Concrete.Food", b =>
                {
                    b.HasOne("DP_DAL.Entities.Concrete.Portion", "Portion")
                        .WithMany("Foods")
                        .HasForeignKey("PortionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Portion");
                });

            modelBuilder.Entity("DP_DAL.Entities.Concrete.FoodMealUser", b =>
                {
                    b.HasOne("DP_DAL.Entities.Concrete.Beverages", "Beverages")
                        .WithMany("FoodMealUsers")
                        .HasForeignKey("BeveragesId");

                    b.HasOne("DP_DAL.Entities.Concrete.Food", "Food")
                        .WithMany("FoodMealUsers")
                        .HasForeignKey("FoodId");

                    b.HasOne("DP_DAL.Entities.Concrete.Meal", "Meal")
                        .WithMany("FoodMealUsers")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DP_DAL.Entities.Concrete.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DP_DAL.Entities.Concrete.UserInfo", null)
                        .WithMany("FoodMealUsers")
                        .HasForeignKey("UserInfoId");

                    b.Navigation("Beverages");

                    b.Navigation("Food");

                    b.Navigation("Meal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DP_DAL.Entities.Concrete.UserInfo", b =>
                {
                    b.HasOne("DP_DAL.Entities.Concrete.User", "User")
                        .WithOne("UserInfo")
                        .HasForeignKey("DP_DAL.Entities.Concrete.UserInfo", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DP_DAL.Entities.Concrete.Beverages", b =>
                {
                    b.Navigation("FoodMealUsers");
                });

            modelBuilder.Entity("DP_DAL.Entities.Concrete.Food", b =>
                {
                    b.Navigation("FoodMealUsers");
                });

            modelBuilder.Entity("DP_DAL.Entities.Concrete.Meal", b =>
                {
                    b.Navigation("FoodMealUsers");
                });

            modelBuilder.Entity("DP_DAL.Entities.Concrete.Portion", b =>
                {
                    b.Navigation("Beverages");

                    b.Navigation("Foods");
                });

            modelBuilder.Entity("DP_DAL.Entities.Concrete.User", b =>
                {
                    b.Navigation("UserInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("DP_DAL.Entities.Concrete.UserInfo", b =>
                {
                    b.Navigation("FoodMealUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
